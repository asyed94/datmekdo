<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_human_stand_right</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Call parent 'create' event
event_inherited();

self.controllable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Call parent 'step' event
event_inherited();

// Set sprite based on state
switch (self.state) {
    case "standing":
        if (self.dir == "left") sprite_index = sprite_human_stand_left;
        if (self.dir == "right") sprite_index = sprite_human_stand_right;
        break;
    case "moving":
        if (self.dir == "left") sprite_index = sprite_human_move_left;
        if (self.dir == "right") sprite_index = sprite_human_move_right;
        break;
    case "crouching":
        if (self.dir == "left") sprite_index = sprite_human_crouch_left;
        if (self.dir == "right") sprite_index = sprite_human_crouch_right;
        break;
    case "jumping":
        if (self.dir == "left") sprite_index = sprite_human_jump_left;
        if (self.dir == "right") sprite_index = sprite_human_jump_right;
        break;
}

// Mech interaction
if (place_meeting(x, y, Mech)) {
    if (keyboard_check_pressed(vk_down)) {  
        if (Mech.controllable == false) {
            // Hide Human
            self.visible = false;
            // Activate Mech
            self.controllable = false;
            Mech.controllable = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
